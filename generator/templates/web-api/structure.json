{
  "name": "my-project",
  "type": "directory",
  "children": [
    {
      "name": "cmd",
      "type": "directory",
      "children": [
        {
          "name": "server",
          "type": "directory",
          "children": [
            {
              "name": "main.go",
              "type": "file",
              "content": "package main\n\n import (\n\t\"fmt\"\n)\nfunc main() {\n\tfmt.Println(\"Hello world\")\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "internal",
      "type": "directory",
      "children": [
        {
          "name": "api",
          "type": "directory",
          "children": [
            {
              "name": "handlers",
              "type": "directory",
              "children": [
                {
                  "name": "user.go",
                  "type": "file",
                  "content": "package handlers"
                },
                {
                  "name": "auth.go",
                  "type": "file",
                  "content": "package handlers"
                },
                {
                  "name": "health.go",
                  "type": "file",
                  "content": "package handlers"
                }
              ]
            },
            {
              "name": "middleware",
              "type": "directory",
              "children": [
                {
                  "name": "auth.go",
                  "type": "file",
                  "content": "package middleware"
                },
                {
                  "name": "logging.go",
                  "type": "file",
                  "content": "package middleware"
                }
              ]
            },
            {
              "name": "routes",
              "type": "directory",
              "children": [
                {
                  "name": "routes.go",
                  "type": "file",
                  "content": "package routes"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "config",
      "type": "directory",
      "children": [
        {
          "name": "config.go",
          "type": "file",
          "content": "package config"
        }
      ]
    },
    {
      "name": "tests",
      "type": "directory",
      "children": [
        {
          "name": "integration",
          "type": "directory",
          "children": [
            {
              "name": "api_test.go",
              "type": "file",
              "content": "package integration\n\nimport \"testing\"\n\nfunc TestApi(t *testing.T) {\n\texpected := \"Hello, API!\"\n\tif result := \"Hello, API!\"; result != expected {\n\t\tt.Errorf(\"Expected %s, got %s\", expected, result)\n\t}\n}"
            }
          ]
        },
        {
          "name": "unit",
          "type": "directory",
          "children": [
            {
              "name": "handlers_test.go",
              "type": "file",
              "content": "package unit\n\nimport \"testing\"\n\nfunc TestHandlers(t *testing.T) {\n\texpected := \"Hello, Handlers!\"\n\tif result := \"Hello, Handlers!\"; result != expected {\n\t\tt.Errorf(\"Expected %s, got %s\", expected, result)\n\t}\n}"
            },
            {
              "name": "services_test.go",
              "type": "file",
              "content": "package unit\n\nimport \"testing\"\n\nfunc TestServices(t *testing.T) {\n\texpected := \"Hello, Services!\"\n\tif result := \"Hello, Services!\"; result != expected {\n\t\tt.Errorf(\"Expected %s, got %s\", expected, result)\n\t}\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "respository",
      "type": "directory",
      "children": [
        {
          "name": "interfaces.go",
          "type": "file",
          "content": "package repository"
        },
        {
          "name": "user_repo.go",
          "type": "file",
          "content": "package repository"
        },
        {
          "name": "postgres",
          "type": "directory",
          "children": [
            {
              "name": "user.go",
              "type": "file",
              "content": "package postgres"
            }
          ]
        }
      ]
    },
    {
      "name": "service",
      "type": "directory",
      "children": [
        {
          "name": "user_service.go",
          "type": "file",
          "content": "package service"
        },
        {
          "name": "auth_service.go",
          "type": "file",
          "content": "package service"
        }
      ]
    },
    {
      "name": "utils",
      "type": "directory",
      "children": [
        {
          "name": "jwt.go",
          "type": "file",
          "content": "package utils"
        },
        {
          "name": "validator.go",
          "type": "file",
          "content": "package utils"
        }
      ]
    },
    {
      "name": "models",
      "type": "directory",
      "children": [
        {
          "name": "user.go",
          "type": "file",
          "content": "package models"
        }
      ]
    },
    {
      "name": "database",
      "type": "directory",
      "children": [
        {
          "name": "connection.go",
          "type": "file",
          "content": "package database"
        },
        {
          "name": "migrations",
          "type": "directory",
          "children": [
            {
              "name": "001_create_users.sql",
              "type": "file"
            }
          ]
        }
      ]
    },
    {
      "name": "libs",
      "type": "directory",
      "children": [
        {
          "name": "logger",
          "type": "directory",
          "children": [
            {
              "name": "logger.go",
              "type": "file",
              "content": "package logger"
            }
          ]
        }
      ]
    },
    {
      "name": "scripts",
      "type": "directory",
      "children": [
        {
          "name": "build.sh",
          "type": "file",
          "content": "# Build your go project"
        },
        {
          "name": "migrate.sh",
          "type": "file",
          "content": "# Migrations for your project"
        }
      ]
    },
    {
      "name": "docs",
      "type": "directory",
      "children": [
        {
          "name": "api.sh",
          "type": "file",
          "content": "# Documentation of your project"
        },
        {
          "name": "swagger.yaml",
          "type": "file"
        }
      ]
    },
    {
      "name": "deployments",
      "type": "directory",
      "children": [
        {
          "name": "docker",
          "type": "directory",
          "children": [
            {
              "name": "Dockerfile",
              "type": "file",
              "content": "FROM golang:1.23-alpine AS builder\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN go build -o main ./cmd/server\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=builder /app/main .\nEXPOSE 8080\nCMD [\"./main\"]"
            }
          ]
        },
        {
          "name": "k8s",
          "type": "directory",
          "children": [
            {
              "name": "deployment.yaml",
              "type": "file",
              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: go-api\n  labels:\n    app: go-api\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: go-api\n  template:\n    metadata:\n      labels:\n        app: go-api\n    spec:\n      containers:\n      - name: go-api\n        image: go-api:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: PORT\n          value: \"8080\"\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\""
            },
            {
              "name": "service.yaml",
              "type": "file",
              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: go-api-service\n  labels:\n    app: go-api\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n    targetPort: 8080\n    protocol: TCP\n  selector:\n    app: go-api"
            }
          ]
        }
      ]
    },
    {
      "name": "README.md",
      "type": "file",
      "template": "# {{project_name}}\n\n{{description}}\n\n## Installation\n\n",
      "data": {
        "project_name": "My Go Project",
        "description": "A sample Go project generated from JSON structure"
      }
    },
    {
      "name": "go.mod",
      "type": "file",
      "template": "module {{app-name}} \n\ngo 1.24.3",
      "data": {
        "app-name": "myapp"
      }
    },
    {
      "name": "go.sum",
      "type": "file"
    },
    {
      "name": ".gitignore",
      "type": "file",
      "template": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n# Test binary, built with `go test -c`\n*.test\n# Code coverage profiles and other test artifacts\n*.out\ncoverage.*\n*.coverprofile\nprofile.cov\n# Dependency directories (remove the comment below to include it)\n# vendor/\n# Go workspace file\ngo.work\ngo.work.sum\n# env file\n.env\n# Editor/IDE\n# .idea/\n# .vscode/"
    },
    {
      "name": "Makefile",
      "type": "file",
      "template": "# Local development or test purposes"
    }
  ]
}